pipeline {
    agent any

    parameters {
        string(name: 'vpc_name', defaultValue: 'my-vpc', description: 'VPC Name')
        string(name: 'cidr_block', defaultValue: '10.0.0.0/16', description: 'CIDR Block')
        string(name: 'environment', defaultValue: 'dev', description: 'Environment')
    }

    environment {
        REPO_URL = 'https://github.com/shubham-thaware/terraform-module.git'
        BRANCH_NAME = "feature/vpc-${params.vpc_name}-${BUILD_NUMBER ?: '001'}"
    }
	
    stages {
        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Checkout') {  
            steps {
                git branch: 'main', credentialsId: 'github', url: "${REPO_URL}"
            }
        }

        stage('Create Branch & tfvars') {
            steps {
                sh """
                git checkout -b ${BRANCH_NAME}
                echo 'vpc_name = "${params.vpc_name}"' > environments/${params.environment}/terraform.auto.tfvars
                echo 'cidr_block = "${params.cidr_block}"' >> environments/${params.environment}/terraform.auto.tfvars
                echo 'env = "${params.environment}"' >> environments/${params.environment}/terraform.auto.tfvars
                """
            }
        }

        stage('Terraform Init & Plan') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'aws-credentials', usernameVariable: 'AWS_ACCESS_KEY_ID', passwordVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                    dir("environments/${params.environment}") {
                        sh """
                        export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
                        export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY

                        terraform init
                        terraform plan -var-file=terraform.auto.tfvars -out=tfplan.out
                        """
                    }
                }
            }
        }

        stage('Commit & Push Branch') {
            steps {
                sh """
                git config user.name "Jenkins"
                git config user.email "jenkins@testdomain.com"
                git add .
                git commit -m "Add VPC ${params.vpc_name}"
                git push origin ${BRANCH_NAME}
                """
            }
        }

	stage('Create PR on GitHub') {
	    steps {
	        withCredentials([string(credentialsId: 'github-token', variable: 'GITHUB_TOKEN')]) {
	            sh '''#!/bin/bash
	            PR_BODY=$(cat environments/${environment}/tfplan.out | base64)
	
	            cat <<EOF > pr-body.json
	            {
	                "title": "Add VPC ${vpc_name}",
	                "body": "${PR_BODY}",
	                "head": "feature/vpc-${vpc_name}-${BUILD_NUMBER:-001}",
	                "base": "main"
	            }
	EOF
	
	            curl -X POST -H "Authorization: token $GITHUB_TOKEN" \
	                 -H "Accept: application/vnd.github.v3+json" \
	                 https://api.github.com/repos/shubham-thaware/terraform-module/pulls \
	                 -d @pr-body.json
	            '''
	        }
	    }
	}
    }
}
