pipeline {
  agent any

  parameters {
    string(name: 'vpc_name', description: 'VPC Name')
    string(name: 'env', description: 'Environment (dev, prod, stage, qa)')
  }

  environment {
    BASE_DIR = 'environments'
  }

  stages {
    stage('Prepare Terraform files and plan') {
      steps {
        withCredentials([
          [$class: 'AmazonWebServicesCredentialsBinding',
           credentialsId: 'aws-credentials',
           accessKeyVariable: 'AWS_ACCESS_KEY_ID',
           secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'],
          string(credentialsId: 'github-token', variable: 'GITHUB_TOKEN')
        ]) {
          script {
            def branchName = "plan-${params.env}-${env.BUILD_NUMBER}"
            def tfDir = "${BASE_DIR}/${params.env}"

            checkout scm: [
              $class: 'GitSCM',
              branches: [[name: 'main']],
              userRemoteConfigs: [[
                url: 'https://github.com/shubham-thaware/terraform-module.git',
                credentialsId: 'github'
              ]]
            ]

            // Avoid referencing Jenkins objects inside shell script
            def tfEnv = "${params.env}"
            def tfVpc = "${params.vpc_name}"

            withEnv(["TF_ENV=${tfEnv}", "TF_VPC_NAME=${tfVpc}"]) {
              sh '''
                set -e
                tfDir="environments/${TF_ENV}"
                mkdir -p "$tfDir"

                if [ ! -f terraform.tfvars.template ]; then
                  echo "‚ö†Ô∏è terraform.tfvars.template not found, creating default..."
                  cat <<EOF > terraform.tfvars.template
vpc_name = "__VPC_NAME__"
env      = "__ENV__"
EOF
                fi

                sed "s|__VPC_NAME__|$TF_VPC_NAME|g; s|__ENV__|$TF_ENV|g" terraform.tfvars.template > "$tfDir/terraform.tfvars"

                cd "$tfDir"

                echo "üß™ Running terraform init..."
                terraform init -input=false

                echo "üß† Running terraform plan..."
                terraform plan -input=false -var-file=terraform.tfvars -out=tfplan.out

                cd ../../

                git config user.name "jenkins-bot"
                git config user.email "jenkins@example.com"

                git checkout -b plan-$TF_ENV-$BUILD_NUMBER
                git add "$tfDir/terraform.tfvars" "$tfDir/tfplan.out"
                git commit -m "Terraform plan for $TF_ENV - build $BUILD_NUMBER"
                git push origin plan-$TF_ENV-$BUILD_NUMBER

                export GITHUB_TOKEN=$GITHUB_TOKEN

                gh pr create --title "Terraform plan for $TF_ENV - build $BUILD_NUMBER" \
                  --body "This PR contains Terraform plan files for environment $TF_ENV created by Jenkins build $BUILD_NUMBER." \
                  --base main --head plan-$TF_ENV-$BUILD_NUMBER shubham-thaware/terraform-module
              '''
            }
          }
        }
      }
    }
  }
}
