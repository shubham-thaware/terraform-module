pipeline {
  agent any

  parameters {
    string(name: 'vpc_name', defaultValue: 'my-vpc', description: 'VPC Name')
    string(name: 'env', defaultValue: 'dev', description: 'Environment Name')
  }

  environment {
    TF_DIR = 'environments/dev'
  }

  stages {
    stage('Terraform Init & Apply') {
      steps {
        withCredentials([[
          $class: 'AmazonWebServicesCredentialsBinding',
          credentialsId: 'aws-credentials-id', // <-- Replace with your AWS creds ID
          accessKeyVariable: 'AWS_ACCESS_KEY_ID',
          secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
        ]] ) {
          dir("${env.TF_DIR}") {
            sh '''
              echo "💡 Preparing terraform.tfvars from template..."

              cat terraform.tfvars.template | sed \
                -e "s|\${vpc_name}|${vpc_name}|" \
                -e "s|\${env}|${env}|" > terraform.tfvars

              echo "📦 Running Terraform Init"
              terraform init

              echo "🔍 Terraform Plan"
              terraform plan -var-file=terraform.tfvars -out=tfplan.out

              echo "🚀 Terraform Apply"
              terraform apply -auto-approve tfplan.out
            '''
          }
        }
      }
    }
  }
}
